{"version":3,"sources":["Channels.jsx","CastButton.jsx","App.js","index.js"],"names":["Channels","props","currentVideo","setCurrentVideo","videoUrl","map","url","name","substring","lastIndexOf","className","href","onClick","window","open","CastButton","cast","useCast","initialize_media_player","auto_initialize","handleClick","useCallback","a","castReceiver","handleConnection","App","useState","localStorage","getItem","username","setUsername","password","setPassword","useEffect","setItem","media","useMedia","playVideo","mediaSrc","playMedia","isConnect","id","style","width","maxHeight","playing","controls","type","placeholder","value","onChange","ev","target","disabled","rootElement","document","getElementById","ReactDOM","render"],"mappings":"qNAGe,SAASA,EAASC,GAC/B,IAAQC,EAA4CD,EAA5CC,aAAcC,EAA8BF,EAA9BE,gBAAiBC,EAAaH,EAAbG,SAevC,OACE,6BAfe,CACf,4BACA,4BACA,4BACA,4BACA,+BACA,8BACA,2BACA,2BACA,2BACA,6BACA,iCAKYC,KAAI,SAACC,GACb,IAAMC,EAAOD,EAAIE,UACfF,EAAIG,YAAY,KAAO,EACvBH,EAAIG,YAAY,aAElB,OACE,oBAAeC,UAAWR,IAAiBI,EAAM,WAAa,GAA9D,SACE,mBACEK,KAAK,SACLC,QAAS,WACHV,IAAiBI,EACnBO,OAAOC,KAAKV,GAEZD,EAAgBG,IANtB,SAUGC,KAXIA,QCvBJ,SAASQ,IACtB,IAAMC,EAAOC,YAAQ,CACnBC,wBAAyB,gCACzBC,iBAAiB,IAEbC,EAAcC,sBAAW,sBAAC,sBAAAC,EAAA,0DAC1BN,EAAKO,aADqB,gCAEtBP,EAAKQ,mBAFiB,2CAI7B,CAACR,EAAKO,aAAcP,EAAKQ,mBAC5B,OAAO,wBAAQZ,QAASQ,EAAjB,sB,MCJM,SAASK,IACtB,MAAwCC,mBACtCb,OAAOc,aAAaC,QAAQ,MAD9B,mBAAO1B,EAAP,KAAqBC,EAArB,KAGA,EAAgCuB,mBAC9Bb,OAAOc,aAAaC,QAAQ,MAAQ,IADtC,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAAgCJ,mBAC9Bb,OAAOc,aAAaC,QAAQ,MAAQ,IADtC,mBAAOG,EAAP,KAAiBC,EAAjB,KAIM5B,EAAQ,UAbH,8BAaG,YAAiByB,EAAjB,YAA6BE,EAA7B,YAAyC7B,GAEvD+B,qBAAU,WACRpB,OAAOc,aAAaO,QAAQ,IAAKL,GACjChB,OAAOc,aAAaO,QAAQ,IAAKH,GACjClB,OAAOc,aAAaO,QAAQ,IAAKhC,MAGnC,IAAMc,EAAOC,cACPkB,EAAQC,cACRC,EAAYhB,sBAAW,uCAC3B,WAAOiB,GAAP,SAAAhB,EAAA,0DACMa,EADN,gCAEUA,EAAMI,UAAUD,GAF1B,2CAD2B,sDAM3B,CAACH,IASH,OANAF,qBAAU,WACJjB,EAAKwB,WACPH,EAAUjC,KAEX,CAACF,IAGF,qBAAKQ,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAACK,EAAD,IACA,qBAAK0B,GAAG,QAAQC,MAAO,CAAEC,MAAO,OAAQC,UAAW,QAAnD,SACG,cAAC,IAAD,CAAatC,IAAKF,EAAUyC,SAAO,EAACC,UAAQ,MAE/C,cAAC9C,EAAD,CACEE,aAAcA,EACdC,gBAAiBA,EACjBC,SAAUA,IAEZ,uBACE2C,KAAK,OACLC,YAAY,WACZC,MAAOpB,EACPqB,SAAU,SAACC,GACTrB,EAAYqB,EAAGC,OAAOH,UAG1B,uBACEF,KAAK,WACLC,YAAY,WACZC,MAAOlB,EACPmB,SAAU,SAACC,GACTnB,EAAYmB,EAAGC,OAAOH,UAG1B,uBACA,uBAAOF,KAAK,OAAOE,MAAO7C,EAAUiD,UAAQ,SCtEpD,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACjC,EAAD,MAEF6B,K","file":"static/js/main.fece20c1.chunk.js","sourcesContent":["import { useCallback } from \"react\";\nimport { useMedia } from \"react-chromecast\";\n\nexport default function Channels(props) {\n  const { currentVideo, setCurrentVideo, videoUrl } = props;\n  const channels = [\n    \"livetv.epg/sport1.il.m3u8\",\n    \"livetv.epg/sport2.il.m3u8\",\n    \"livetv.epg/sport3.il.m3u8\",\n    \"livetv.epg/sport4.il.m3u8\",\n    \"livetv.epg/sport5.4k.il.m3u8\",\n    \"livetv.epg/5sporthd.il.m3u8\",\n    \"livetv.epg/5gold.il.m3u8\",\n    \"livetv.epg/5live.il.m3u8\",\n    \"livetv.epg/5plus.il.m3u8\",\n    \"livetv.epg/5starts.il.m3u8\",\n    \"livetv.epg/eurosport1.il.m3u8\"\n  ];\n\n  return (\n    <ul>\n      {channels.map((url) => {\n        const name = url.substring(\n          url.lastIndexOf(\"/\") + 1,\n          url.lastIndexOf(\".il.m3u8\")\n        );\n        return (\n          <li key={name} className={currentVideo === url ? \"selected\" : \"\"}>\n            <a\n              href=\"#video\"\n              onClick={() => {\n                if (currentVideo === url) {\n                  window.open(videoUrl);\n                } else {\n                  setCurrentVideo(url);\n                }\n              }}\n            >\n              {name}\n            </a>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// CastButton component\nimport React, { useCallback } from \"react\";\nimport { useCast } from \"react-chromecast\";\n\nexport default function CastButton() {\n  const cast = useCast({\n    initialize_media_player: \"DEFAULT_MEDIA_RECEIVER_APP_ID\",\n    auto_initialize: true\n  });\n  const handleClick = useCallback(async () => {\n    if (cast.castReceiver) {\n      await cast.handleConnection();\n    }\n  }, [cast.castReceiver, cast.handleConnection]);\n  return <button onClick={handleClick}>castIcon</button>;\n}\n","import React, { useState, useEffect, useCallback, useDebugValue } from \"react\";\nimport CastProvider, { useMedia, useCast } from \"react-chromecast\";\n\nimport ReactPlayer from \"react-player\";\nimport Channels from \"./Channels\";\nimport CastButton from \"./CastButton\";\n\nimport \"./styles.scss\";\nconst baseUrl = `https://tv4.live/api/stream`;\n\nexport default function App() {\n  const [currentVideo, setCurrentVideo] = useState(\n    window.localStorage.getItem(\"v\")\n  );\n  const [username, setUsername] = useState(\n    window.localStorage.getItem(\"u\") || \"\"\n  );\n  const [password, setPassword] = useState(\n    window.localStorage.getItem(\"p\") || \"\"\n  );\n\n  const videoUrl = `${baseUrl}/${username}/${password}/${currentVideo}`;\n\n  useEffect(() => {\n    window.localStorage.setItem(\"u\", username);\n    window.localStorage.setItem(\"p\", password);\n    window.localStorage.setItem(\"v\", currentVideo);\n  });\n\n  const cast = useCast();\n  const media = useMedia();\n  const playVideo = useCallback(\n    async (mediaSrc) => {\n      if (media) {\n        await media.playMedia(mediaSrc);\n      }\n    },\n    [media]\n  );\n\n  useEffect(() => {\n    if (cast.isConnect) {\n      playVideo(videoUrl);\n    }\n  }, [currentVideo]);\n\n  return (\n    <div className=\"App\">\n      <CastProvider>\n        <CastButton />\n        <div id=\"video\" style={{ width: \"100%\", maxHeight: \"50vh\" }}>\n          {<ReactPlayer url={videoUrl} playing controls />}\n        </div>\n        <Channels\n          currentVideo={currentVideo}\n          setCurrentVideo={setCurrentVideo}\n          videoUrl={videoUrl}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          onChange={(ev) => {\n            setUsername(ev.target.value);\n          }}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(ev) => {\n            setPassword(ev.target.value);\n          }}\n        />\n        <br />\n        <input type=\"text\" value={videoUrl} disabled />\n      </CastProvider>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}